(define (domain moveBox)
(:requirements :typing :method-preconditions :hierarchy)

(:types
	robot box - object
)

(:predicates
	(Free ?r - robot)
	(GluedBox ?b - box ?r - robot)
)

(:task task0 :parameters (?r1 - robot ?r2 - robot ?b1 - box))
(:task task1 :parameters (?r1 - robot ?r2 - robot ?b1 - box))
(:task task2 :parameters (?r1 - robot ?r2 - robot ?b1 - box))
(:task task3 :parameters (?r1 - robot ?r2 - robot ?b1 - box))
(:task task4 :parameters (?r1 - robot ?r2 - robot ?b1 - box))
(:task task5 :parameters (?r1 - robot ?r2 - robot ?b1 - box))
(:task task6 :parameters (?r1 - robot ?r2 - robot ?b1 - box))
(:task task7 :parameters (?r1 - robot ?r2 - robot ?b1 - box))


(:method m11-task7
	:parameters (?r1 - robot ?r2 - robot ?b1 - box)
	:task (task7 ?r1 ?r2 ?b1)
	:subtasks (task6 ?r1 ?r2 ?b1)
)

(:method m10-task7
	:parameters (?r1 - robot ?r2 - robot ?b1 - box)
	:task (task7 ?r1 ?r2 ?b1)
	:subtasks (task5 ?r1 ?r2 ?b1)
)

(:method m9-task7
	:parameters (?r1 - robot ?r2 - robot ?b1 - box)
	:task (task7 ?r1 ?r2 ?b1)
	:subtasks (task4 ?r1 ?r2 ?b1)
)

(:method m8-task6
	:parameters (?r1 - robot ?r2 - robot ?b1 - box)
	:task (task6 ?r1 ?r2 ?b1)
	:subtasks (task3 ?r1 ?r2 ?b1)
)

(:method m7-task5
	:parameters (?r1 - robot ?r2 - robot ?b1 - box)
	:task (task5 ?r1 ?r2 ?b1)
	:subtasks (task3 ?r1 ?r2 ?b1)
)

(:method m6-task4
	:parameters (?r1 - robot ?r2 - robot ?b1 - box)
	:task (task4 ?r1 ?r2 ?b1)
	:subtasks (task3 ?r1 ?r2 ?b1)
)

(:method m5-task3
	:parameters (?r1 - robot ?r2 - robot ?b1 - box)
	:task (task3 ?r1 ?r2 ?b1)
	:subtasks (task2 ?r1 ?r2 ?b1)
)

(:method m4-task3
	:parameters (?r1 - robot ?r2 - robot ?b1 - box)
	:task (task3 ?r1 ?r2 ?b1)
	:subtasks (task1 ?r1 ?r2 ?b1)
)

(:method m3-task3
	:parameters (?r1 - robot ?r2 - robot ?b1 - box)
	:task (task3 ?r1 ?r2 ?b1)
	:subtasks (task0 ?r1 ?r2 ?b1)
)

(:method m2-task2
	:parameters (?r1 - robot ?r2 - robot ?b1 - box)
	:task (task2 ?r1 ?r2 ?b1)
	:subtasks (and
		(act2 ?r1 ?r2 ?b1)
	)
)

(:method m1-task1
	:parameters (?r1 - robot ?r2 - robot ?b1 - box)
	:task (task1 ?r1 ?r2 ?b1)
	:subtasks (and
		(act1 ?r1 ?r2 ?b1)
	)
)

(:method m0-task0
	:parameters (?r1 - robot ?r2 - robot ?b1 - box)
	:task (task0 ?r1 ?r2 ?b1)
	:subtasks (and
		(act0 ?r1 ?r2 ?b1)
	)
)

(:action act2
:parameters (?r1 - robot ?r2 - robot ?b1 - box)
:precondition (and (Free ?r1) (Free ?r2)
		)
:effect (and (GluedBox ?b1 ?r1) (not (Free ?r1)) (GluedBox ?b1 ?r2) (not (Free ?r2))
		)
)

(:action act1
:parameters (?r1 - robot ?r2 - robot ?b1 - box)
:precondition (and (Free ?r1) (Free ?r2)
		)
:effect (and (GluedBox ?b1 ?r2) (not (Free ?r2))
		)
)

(:action act0
:parameters (?r1 - robot ?r2 - robot ?b1 - box)
:precondition (and (Free ?r1) (Free ?r2)
		)
:effect (and (GluedBox ?b1 ?r1) (not (Free ?r1))
		)
)


)